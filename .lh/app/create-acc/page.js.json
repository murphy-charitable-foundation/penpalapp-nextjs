{
    "sourceFile": "app/create-acc/page.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1744045163608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744068291755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { updatePassword, signOut } from \"firebase/auth\";\n import { handleLogout } from \"../profile/page\";\n import EditProfileImage from \"@/components/edit-profile\";\n import * as Sentry from \"@sentry/nextjs\";\n-import { logButtonEvent } from \"@/app/firebaseConfig\";\n+import { logButtonEvent, logLoadingTime } from \"@/app/firebaseConfig\";\n import { usePageAnalytics } from \"@/app/utils/useAnalytics\";\n \n export default function CreateAccount() {\n   const [firstName, setFirstName] = useState(\"\");\n@@ -24,8 +24,19 @@\n   const [repeatPassword, setRepeatPassword] = useState(\"\");\n   const [showCreate, setShowCreate] = useState(false);\n   const router = useRouter();\n   usePageAnalytics(\"/create-acc\");\n+  useEffect(() => {\n+    const startTime = performance.now();\n+    requestAnimationFrame(() => {\n+      setTimeout(() => {\n+        const endTime = performance.now();\n+        const loadTime = endTime - startTime;\n+        console.log(`Page render time: ${loadTime}ms`);\n+        logLoadingTime(\"/create-acc\", loadTime);\n+      }, 0);\n+    });\n+  }, []);\n   const handleSubmit = async (e) => {\n     e.preventDefault();\n \n     if (password !== repeatPassword) {\n"
                }
            ],
            "date": 1744045163608,
            "name": "Commit-0",
            "content": "\"use client\";\n\n// pages/create-acc.js\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { auth, db } from \"../firebaseConfig\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { updatePassword, signOut } from \"firebase/auth\";\nimport { handleLogout } from \"../profile/page\";\nimport EditProfileImage from \"@/components/edit-profile\";\nimport * as Sentry from \"@sentry/nextjs\";\nimport { logButtonEvent } from \"@/app/firebaseConfig\";\nimport { usePageAnalytics } from \"@/app/utils/useAnalytics\";\n\nexport default function CreateAccount() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [birthday, setBirthday] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const [showCreate, setShowCreate] = useState(false);\n  const router = useRouter();\n  usePageAnalytics(\"/create-acc\");\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (password !== repeatPassword) {\n      alert(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      // const userCredential = await createUserWithEmailAndPassword(\n      //   auth,\n      //   email,\n      //   password\n      // );\n\n      const user = auth.currentUser;\n      // const user = userCredential.currentUser;\n\n      console.log(`user is :${user}`);\n      const uid = user.uid;\n      try {\n        await updatePassword(user, password);\n      } catch (error) {\n        if (error.code == \"auth/requires-recent-login\") {\n          console.error(\"Account creation timed out: \", error.message);\n          alert(\"Account creation timed out. Please try logging in again.\");\n          await signOut(auth);\n          router.push(\"/login\");\n          return;\n        } else {\n          console.error(\"Failed to change password: \", error.message);\n          throw error;\n        }\n      }\n\n      // Create a document in Firestore in \"users\" collection with UID as the document key\n      await setDoc(doc(db, \"users\", uid), {\n        created_at: new Date(),\n        first_name: firstName,\n        last_name: lastName,\n        birthday,\n        connected_penpals_count: 0,\n      });\n\n      setShowCreate(false);\n\n      // Redirect to profile page or any other page as needed\n      // router.push(\"/profile\");\n    } catch (error) {\n      Sentry.captureException(error); //need to add password checks for size, and etc to make this defualt\n      console.error(\"Error creating account:\", error);\n      alert(error.message);\n    }\n  };\n\n  logButtonEvent(\"Create Account button clicked!\", \"/create-acc\");\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 px-4 relative\">\n      <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md relative min-h-[80vh]\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <svg\n            onClick={() => window.history.back()}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 cursor-pointer\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"black\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M15 19l-7-7 7-7\"\n            />\n          </svg>\n          <h2 className=\"flex-grow text-center text-2xl font-bold text-gray-800\">\n            Create account\n          </h2>\n        </div>\n        <div className=\"flex justify-center mb-6\">\n          <Image\n            src=\"/murphylogo.png\"\n            alt=\"Your Logo\"\n            width={150}\n            height={150}\n          />\n        </div>\n\n        <form className=\"space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"flex gap-4\">\n            <div className=\"w-1/2\">\n              <label\n                htmlFor=\"first-name\"\n                className=\"text-sm font-medium text-gray-700 block mb-2\"\n              >\n                First name\n              </label>\n              <input\n                id=\"first-name\"\n                type=\"text\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n              />\n            </div>\n            <div className=\"w-1/2\">\n              <label\n                htmlFor=\"last-name\"\n                className=\"text-sm font-medium text-gray-700 block mb-2\"\n              >\n                Last name\n              </label>\n              <input\n                id=\"last-name\"\n                type=\"text\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n              />\n            </div>\n          </div>\n          <div>\n            <label\n              htmlFor=\"birthday\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Birthday\n            </label>\n            <input\n              id=\"birthday\"\n              type=\"date\"\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n              value={birthday}\n              onChange={(e) => setBirthday(e.target.value)}\n            />\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Email\n            </label>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              required\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              New Password\n            </label>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              autoComplete=\"new-password\"\n              required\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <div>\n            <label\n              htmlFor=\"repeat-password\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Repeat Password\n            </label>\n            <input\n              id=\"repeat-password\"\n              name=\"repeatPassword\"\n              type=\"password\"\n              required\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n              value={repeatPassword}\n              onChange={(e) => setRepeatPassword(e.target.value)}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            style={{\n              padding: \"10px 20px\",\n              width: \"80%\",\n              margin: \"50px auto\",\n              display: \"block\",\n              backgroundColor: \"#48801c\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"20px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Create Account\n          </button>\n        </form>\n        {/* <EditProfileImage router={router} /> */}\n      </div>\n    </div>\n  );\n}\n"
        }
    ]
}