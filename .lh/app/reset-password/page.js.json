{
    "sourceFile": "app/reset-password/page.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1744045163611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744057735296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import logo from \"/public/murphylogo.png\";\n import Image from \"next/image\";\n import { sendPasswordResetEmail } from \"firebase/auth\";\n import * as Sentry from \"@sentry/nextjs\";\n-import { logButtonEvent } from \"@/app/firebaseConfig\";\n+import { logButtonEvent, logLoadingTime } from \"@/app/firebaseConfig\";\n import { usePageAnalytics } from \"@/app/utils/useAnalytics\";\n export default function ResetPassword() {\n   const [email, setEmail] = useState(\"\");\n   const [showModal, setShowModal] = useState(false);\n"
                },
                {
                    "date": 1744057816708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,27 @@\n \"use client\";\n \n import { db, auth } from \"../firebaseConfig\";\n-import { useState } from \"react\";\n+import { useState, useEffect } from \"react\";\n import { useRouter } from \"next/navigation\";\n import logo from \"/public/murphylogo.png\";\n import Image from \"next/image\";\n import { sendPasswordResetEmail } from \"firebase/auth\";\n import * as Sentry from \"@sentry/nextjs\";\n import { logButtonEvent, logLoadingTime } from \"@/app/firebaseConfig\";\n import { usePageAnalytics } from \"@/app/utils/useAnalytics\";\n+\n export default function ResetPassword() {\n   const [email, setEmail] = useState(\"\");\n   const [showModal, setShowModal] = useState(false);\n   const router = useRouter();\n   usePageAnalytics(\"/reset-password\");\n+\n+  useEffect(() => {\n+    const loadTime = performance.now();\n+    logLoadingTime(\"reset-password\", loadTime);\n+  }, []);\n+\n   function resetPassword() {\n     sendPasswordResetEmail(auth, email)\n       .then(() => {\n         setShowModal(true);\n"
                },
                {
                    "date": 1744057938320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,20 @@\n \"use client\";\n \n import { db, auth } from \"../firebaseConfig\";\n-import { useState, useEffect } from \"react\";\n+import { useState } from \"react\";\n import { useRouter } from \"next/navigation\";\n import logo from \"/public/murphylogo.png\";\n import Image from \"next/image\";\n import { sendPasswordResetEmail } from \"firebase/auth\";\n import * as Sentry from \"@sentry/nextjs\";\n import { logButtonEvent, logLoadingTime } from \"@/app/firebaseConfig\";\n import { usePageAnalytics } from \"@/app/utils/useAnalytics\";\n-\n export default function ResetPassword() {\n   const [email, setEmail] = useState(\"\");\n   const [showModal, setShowModal] = useState(false);\n   const router = useRouter();\n   usePageAnalytics(\"/reset-password\");\n-\n-  useEffect(() => {\n-    const loadTime = performance.now();\n-    logLoadingTime(\"reset-password\", loadTime);\n-  }, []);\n-\n   function resetPassword() {\n     sendPasswordResetEmail(auth, email)\n       .then(() => {\n         setShowModal(true);\n"
                },
                {
                    "date": 1744058047016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,39 @@\n \"use client\";\n \n import { db, auth } from \"../firebaseConfig\";\n-import { useState } from \"react\";\n+import { useState, useEffect } from \"react\";\n import { useRouter } from \"next/navigation\";\n import logo from \"/public/murphylogo.png\";\n import Image from \"next/image\";\n import { sendPasswordResetEmail } from \"firebase/auth\";\n import * as Sentry from \"@sentry/nextjs\";\n import { logButtonEvent, logLoadingTime } from \"@/app/firebaseConfig\";\n import { usePageAnalytics } from \"@/app/utils/useAnalytics\";\n+\n export default function ResetPassword() {\n   const [email, setEmail] = useState(\"\");\n   const [showModal, setShowModal] = useState(false);\n   const router = useRouter();\n   usePageAnalytics(\"/reset-password\");\n+\n+  useEffect(() => {\n+    // 获取页面加载开始时间\n+    const startTime = performance.now();\n+\n+    // 使用 requestAnimationFrame 来确保在下一帧渲染完成后执行\n+    requestAnimationFrame(() => {\n+      // 使用 setTimeout 确保在所有DOM更新完成后执行\n+      setTimeout(() => {\n+        const endTime = performance.now();\n+        const loadTime = endTime - startTime;\n+        console.log(`Page render time: ${loadTime}ms`);\n+        // 记录加载时间到 Firebase\n+        logLoadingTime(\"/reset-password\", loadTime);\n+      }, 0);\n+    });\n+  }, []); // 空依赖数组意味着只在组件首次挂载时执行\n+\n   function resetPassword() {\n     sendPasswordResetEmail(auth, email)\n       .then(() => {\n         setShowModal(true);\n"
                },
                {
                    "date": 1744058147804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,23 +16,19 @@\n   const router = useRouter();\n   usePageAnalytics(\"/reset-password\");\n \n   useEffect(() => {\n-    // 获取页面加载开始时间\n     const startTime = performance.now();\n \n-    // 使用 requestAnimationFrame 来确保在下一帧渲染完成后执行\n     requestAnimationFrame(() => {\n-      // 使用 setTimeout 确保在所有DOM更新完成后执行\n       setTimeout(() => {\n         const endTime = performance.now();\n         const loadTime = endTime - startTime;\n         console.log(`Page render time: ${loadTime}ms`);\n-        // 记录加载时间到 Firebase\n         logLoadingTime(\"/reset-password\", loadTime);\n       }, 0);\n     });\n-  }, []); // 空依赖数组意味着只在组件首次挂载时执行\n+  }, []);\n \n   function resetPassword() {\n     sendPasswordResetEmail(auth, email)\n       .then(() => {\n"
                },
                {
                    "date": 1744058229150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,14 +9,45 @@\n import * as Sentry from \"@sentry/nextjs\";\n import { logButtonEvent, logLoadingTime } from \"@/app/firebaseConfig\";\n import { usePageAnalytics } from \"@/app/utils/useAnalytics\";\n \n+// Throttle function to limit the rate at which a function can fire\n+const throttle = (func, limit) => {\n+  let inThrottle;\n+  return function (...args) {\n+    if (!inThrottle) {\n+      func.apply(this, args);\n+      inThrottle = true;\n+      setTimeout(() => (inThrottle = false), limit);\n+    }\n+  };\n+};\n+\n export default function ResetPassword() {\n   const [email, setEmail] = useState(\"\");\n   const [showModal, setShowModal] = useState(false);\n   const router = useRouter();\n   usePageAnalytics(\"/reset-password\");\n \n+  // 使用 useEffect 创建 throttled 函数，避免在每次渲染时重新创建\n+  const deadClick = useEffect(() => {\n+    const handleDeadClick = (e) => {\n+      console.log(\"Dead click detected\");\n+      logButtonEvent(\"Dead click detected\", \"/reset-password\");\n+    };\n+\n+    // 创建节流版本的 deadClick，1000ms (1秒) 的限制\n+    const throttledDeadClick = throttle(handleDeadClick, 1000);\n+\n+    // 添加事件监听器\n+    document.addEventListener(\"click\", throttledDeadClick);\n+\n+    // 清理函数\n+    return () => {\n+      document.removeEventListener(\"click\", throttledDeadClick);\n+    };\n+  }, []);\n+\n   useEffect(() => {\n     const startTime = performance.now();\n \n     requestAnimationFrame(() => {\n"
                },
                {
                    "date": 1744058394586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,20 +9,8 @@\n import * as Sentry from \"@sentry/nextjs\";\n import { logButtonEvent, logLoadingTime } from \"@/app/firebaseConfig\";\n import { usePageAnalytics } from \"@/app/utils/useAnalytics\";\n \n-// Throttle function to limit the rate at which a function can fire\n-const throttle = (func, limit) => {\n-  let inThrottle;\n-  return function (...args) {\n-    if (!inThrottle) {\n-      func.apply(this, args);\n-      inThrottle = true;\n-      setTimeout(() => (inThrottle = false), limit);\n-    }\n-  };\n-};\n-\n export default function ResetPassword() {\n   const [email, setEmail] = useState(\"\");\n   const [showModal, setShowModal] = useState(false);\n   const router = useRouter();\n"
                },
                {
                    "date": 1744058580125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,27 +15,8 @@\n   const [showModal, setShowModal] = useState(false);\n   const router = useRouter();\n   usePageAnalytics(\"/reset-password\");\n \n-  // 使用 useEffect 创建 throttled 函数，避免在每次渲染时重新创建\n-  const deadClick = useEffect(() => {\n-    const handleDeadClick = (e) => {\n-      console.log(\"Dead click detected\");\n-      logButtonEvent(\"Dead click detected\", \"/reset-password\");\n-    };\n-\n-    // 创建节流版本的 deadClick，1000ms (1秒) 的限制\n-    const throttledDeadClick = throttle(handleDeadClick, 1000);\n-\n-    // 添加事件监听器\n-    document.addEventListener(\"click\", throttledDeadClick);\n-\n-    // 清理函数\n-    return () => {\n-      document.removeEventListener(\"click\", throttledDeadClick);\n-    };\n-  }, []);\n-\n   useEffect(() => {\n     const startTime = performance.now();\n \n     requestAnimationFrame(() => {\n"
                }
            ],
            "date": 1744045163611,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { db, auth } from \"../firebaseConfig\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport logo from \"/public/murphylogo.png\";\nimport Image from \"next/image\";\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport * as Sentry from \"@sentry/nextjs\";\nimport { logButtonEvent } from \"@/app/firebaseConfig\";\nimport { usePageAnalytics } from \"@/app/utils/useAnalytics\";\nexport default function ResetPassword() {\n  const [email, setEmail] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const router = useRouter();\n  usePageAnalytics(\"/reset-password\");\n  function resetPassword() {\n    sendPasswordResetEmail(auth, email)\n      .then(() => {\n        setShowModal(true);\n      })\n      .catch((error) => {\n        Sentry.captureException(error);\n        console.error(error);\n      });\n    logButtonEvent(\"Reset Password clicked!\", \"/reset-password\");\n  }\n\n  function closeModal() {\n    setShowModal(false);\n  }\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 px-6\">\n      <div className=\"w-full max-w-md space-y-8\">\n        <div\n          style={{ textAlign: \"center\", padding: \"20px\", background: \"white\" }}\n        >\n          <div className=\"flex items-center justify-between mb-4\">\n            <svg\n              onClick={() => window.history.back()}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6 cursor-pointer\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"black\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M15 19l-7-7 7-7\"\n              />\n            </svg>\n            <h2 className=\"flex-grow text-center text-2xl font-bold text-gray-800\">\n              Reset your password\n            </h2>\n            <div className=\"h-6 w-6\"></div>\n          </div>\n          <div className=\"flex justify-center\">\n            <Image src={logo} alt=\"Foundation Logo\" width={200} margin={0} />\n          </div>\n          <div\n            style={{\n              display: \"inline-block\",\n              width: \"80%\",\n              maxWidth: \"500px\",\n              textAlign: \"left\",\n            }}\n          >\n            <label\n              htmlFor=\"email\"\n              className=\"text-sm font-medium text-gray-700 block\"\n            >\n              Write your e-mail registered\n            </label>\n          </div>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Ex: user@gmail.com\"\n            style={{\n              border: \"0px\",\n              borderBottom: \"1px solid black\",\n              padding: \"10px\",\n              width: \"80%\",\n              margin: \"0 auto\",\n              display: \"block\",\n              color: \"black\",\n            }}\n          />\n          <button\n            onClick={resetPassword}\n            style={{\n              padding: \"10px 20px\",\n              width: \"80%\",\n              margin: \"50px auto\",\n              display: \"block\",\n              backgroundColor: \"#48801c\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"20px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Reset\n          </button>\n\n          {showModal && (\n            <div\n              style={{\n                position: \"fixed\",\n                top: 0,\n                left: 0,\n                width: \"100vw\",\n                height: \"100vh\",\n                background: \"rgba(0, 0, 0, 0.5)\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                zIndex: 2,\n              }}\n            >\n              <div\n                style={{\n                  backgroundColor: \"white\",\n                  padding: \"20px\",\n                  borderRadius: \"5px\",\n                  textAlign: \"center\",\n                  width: \"80%\",\n                  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",\n                }}\n              >\n                <h3 style={{ color: \"#023268\" }}>Check your email</h3>\n                <p style={{ color: \"black\" }}>\n                  Please check your email inbox and spam folder for a\n                  verification email to reset your password.\n                </p>\n                <button\n                  onClick={closeModal}\n                  style={{\n                    backgroundColor: \"#48801c\",\n                    color: \"white\",\n                    padding: \"10px 20px\",\n                    margin: \"10px 0\",\n                    borderRadius: \"20px\",\n                    border: \"none\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  Understood\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"
        }
    ]
}