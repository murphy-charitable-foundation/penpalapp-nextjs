{
    "sourceFile": "app/discovery/page.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1744045163609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744067955911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import KidCard from \"@/components/general/KidCard\";\n import KidFilter from \"@/components/discovery/KidFilter\";\n import Link from \"next/link\";\n import * as Sentry from \"@sentry/nextjs\";\n-import { logButtonEvent } from \"@/app/firebaseConfig\";\n+import { logButtonEvent, logLoadingTime } from \"@/app/firebaseConfig\";\n import { usePageAnalytics } from \"@/app/utils/useAnalytics\";\n const PAGE_SIZE = 10; // Number of kids per page\n \n export default function ChooseKid() {\n@@ -29,13 +29,22 @@\n \n   const [age, setAge] = useState(0);\n   const [gender, setGender] = useState(\"\");\n   const [hobbies, setHobbies] = useState([]);\n-\n+  usePageAnalytics(\"/discovery\");\n   useEffect(() => {\n+    const startTime = performance.now();\n     fetchKids();\n+    requestAnimationFrame(() => {\n+      setTimeout(() => {\n+        const endTime = performance.now();\n+        const loadTime = endTime - startTime;\n+        console.log(`Page render time: ${loadTime}ms`);\n+        logLoadingTime(\"/discovery\", loadTime);\n+      }, 0);\n+    });\n   }, [age, gender, hobbies]);\n-  usePageAnalytics(\"/discovery\");\n+\n   const fetchKids = async () => {\n     setLoading(true);\n \n     try {\n"
                },
                {
                    "date": 1744068055473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,16 +33,8 @@\n   usePageAnalytics(\"/discovery\");\n   useEffect(() => {\n     const startTime = performance.now();\n     fetchKids();\n-    requestAnimationFrame(() => {\n-      setTimeout(() => {\n-        const endTime = performance.now();\n-        const loadTime = endTime - startTime;\n-        console.log(`Page render time: ${loadTime}ms`);\n-        logLoadingTime(\"/discovery\", loadTime);\n-      }, 0);\n-    });\n   }, [age, gender, hobbies]);\n \n   const fetchKids = async () => {\n     setLoading(true);\n@@ -144,8 +136,16 @@\n       Sentry.captureException(\"Error fetching kids \" + error);\n     } finally {\n       setLoading(false);\n       setInitialLoad(false);\n+      requestAnimationFrame(() => {\n+        setTimeout(() => {\n+          const endTime = performance.now();\n+          const loadTime = endTime - startTime;\n+          console.log(`Page render time: ${loadTime}ms`);\n+          logLoadingTime(\"/discovery\", loadTime);\n+        }, 0);\n+      });\n     }\n   };\n \n   function calculateAge(birthdayTimestamp) {\n"
                },
                {
                    "date": 1744068144517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,12 +32,12 @@\n   const [hobbies, setHobbies] = useState([]);\n   usePageAnalytics(\"/discovery\");\n   useEffect(() => {\n     const startTime = performance.now();\n-    fetchKids();\n+    fetchKids(startTime);\n   }, [age, gender, hobbies]);\n \n-  const fetchKids = async () => {\n+  const fetchKids = async (startTime) => {\n     setLoading(true);\n \n     try {\n       const kidsCollectionRef = collection(db, \"users\");\n"
                }
            ],
            "date": 1744045163609,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  collection,\n  getDocs,\n  query,\n  startAfter,\n  limit,\n  where,\n} from \"firebase/firestore\";\nimport { getStorage, ref, getDownloadURL } from \"firebase/storage\";\nimport { db } from \"../firebaseConfig\"; // Ensure this path is correct\nimport { differenceInCalendarYears, parseISO } from \"date-fns\";\nimport KidCard from \"@/components/general/KidCard\";\nimport KidFilter from \"@/components/discovery/KidFilter\";\nimport Link from \"next/link\";\nimport * as Sentry from \"@sentry/nextjs\";\nimport { logButtonEvent } from \"@/app/firebaseConfig\";\nimport { usePageAnalytics } from \"@/app/utils/useAnalytics\";\nconst PAGE_SIZE = 10; // Number of kids per page\n\nexport default function ChooseKid() {\n  const [activeFilter, setActiveFilter] = useState(false);\n  const [kids, setKids] = useState([]);\n  const [lastKidDoc, setLastKidDoc] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [initialLoad, setInitialLoad] = useState(true);\n\n  const [age, setAge] = useState(0);\n  const [gender, setGender] = useState(\"\");\n  const [hobbies, setHobbies] = useState([]);\n\n  useEffect(() => {\n    fetchKids();\n  }, [age, gender, hobbies]);\n  usePageAnalytics(\"/discovery\");\n  const fetchKids = async () => {\n    setLoading(true);\n\n    try {\n      const kidsCollectionRef = collection(db, \"users\");\n      let q = query(kidsCollectionRef);\n\n      // Apply filters\n      if (age > 0) {\n        const currentDate = new Date();\n        const minBirthDate = new Date(\n          currentDate.getFullYear() - age - 1,\n          currentDate.getMonth(),\n          currentDate.getDate()\n        );\n        const maxBirthDate = new Date(\n          currentDate.getFullYear() - age,\n          currentDate.getMonth(),\n          currentDate.getDate()\n        );\n\n        q = query(q, where(\"date_of_birth\", \">=\", minBirthDate));\n        q = query(q, where(\"date_of_birth\", \"<=\", maxBirthDate));\n      }\n\n      if (gender && gender.length > 0) {\n        q = query(q, where(\"gender\", \"==\", gender));\n      }\n\n      if (hobbies && hobbies.length > 0) {\n        q = query(q, where(\"hobby\", \"array-contains-any\", hobbies));\n      }\n\n      q = query(q, where(\"user_type\", \"==\", \"child\"));\n      q = query(q, where(\"connected_penpals_count\", \"<=\", 3));\n\n      if (lastKidDoc && !initialLoad) {\n        q = query(q, startAfter(lastKidDoc));\n      }\n      q = query(q, limit(PAGE_SIZE));\n      const snapshot = await getDocs(q);\n\n      const kidsList = await Promise.all(\n        snapshot.docs.map(async (doc) => {\n          //Still needed as photo_uri is not currently directly stored under profile\n          const data = doc.data();\n          try {\n            if (data.photo_uri) {\n              const storage = getStorage();\n              const photoRef = ref(storage, data.photo_uri);\n              const photoURL = await getDownloadURL(photoRef);\n              return {\n                id: doc.id,\n                ...data,\n                photoURL,\n              };\n            } else {\n              return {\n                id: doc.id,\n                ...data,\n                photoURL: \"/usericon.png\", // Default image if no photo_uri\n              };\n            }\n          } catch (error) {\n            if (error.code === \"storage/object-not-found\") {\n              return {\n                id: doc.id,\n                ...data,\n                photoURL: \"/usericon.png\", // Default image if photo not found\n              };\n            } else {\n              console.error(\"Error fetching photo URL:\", error);\n              return {\n                id: doc.id,\n                ...data,\n                photoURL: \"/usericon.png\", // Default image if other errors\n              };\n            }\n          }\n        })\n      );\n\n      setKids((prevKids) => {\n        if (initialLoad) {\n          return kidsList;\n        } else {\n          return [...prevKids, ...kidsList];\n        }\n      });\n\n      if (snapshot.docs.length > 0) {\n        setLastKidDoc(snapshot.docs[snapshot.docs.length - 1]);\n      } else {\n        setLastKidDoc(null);\n      }\n    } catch (error) {\n      console.error(\"Error fetching kids:\", error);\n      Sentry.captureException(\"Error fetching kids \" + error);\n    } finally {\n      setLoading(false);\n      setInitialLoad(false);\n    }\n  };\n\n  function calculateAge(birthdayTimestamp) {\n    const timestamp = Date.parse(birthdayTimestamp);\n    const birthdayDate = new Date(timestamp);\n    const currentDate = new Date();\n\n    // Calculate the difference in years\n    const diffInYears = currentDate.getFullYear() - birthdayDate.getFullYear();\n\n    // Adjust the age based on the birth month and day\n    if (\n      currentDate.getMonth() < birthdayDate.getMonth() ||\n      (currentDate.getMonth() === birthdayDate.getMonth() &&\n        currentDate.getDate() < birthdayDate.getDate())\n    ) {\n      return diffInYears - 1;\n    }\n\n    return diffInYears;\n  }\n\n  const filter = async (age, hobby, gender) => {\n    setKids([]);\n    setLastKidDoc(null);\n    setInitialLoad(true);\n    setAge(age);\n    setHobbies(hobby);\n    setGender(gender);\n    setActiveFilter(false);\n  };\n\n  const loadMoreKids = () => {\n    if (loading) return;\n    fetchKids();\n  };\n\n  return (\n    <div className=\"min-h-screen p-4 bg-white\">\n      <div className=\"bg-white\">\n        <div className=\"flex flex-col sm:flex-row sm:justify-between sm:bg-[#034078]  sticky top-0 z-10\">\n          {/* Top part with white background and black text */}\n          <div className=\"p-4 flex items-center justify-between text-black sm:text-white bg-white sm:bg-[#034078]\">\n            <div className=\"flex gap-4 justify-center w-full\">\n              <Link\n                href={\"/letterhome\"}\n                onClick={() =>\n                  logButtonEvent(\"Back button clicked!\", \"/discovery\")\n                }\n              >\n                <svg\n                  className=\"h-6 w-6 text-gray-600\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M15 19l-7-7 7-7\"\n                  />\n                </svg>\n              </Link>\n              <h1 className=\"text-xl sm:text-2xl font-bold text-center\">\n                Choose a kid to write to\n              </h1>\n            </div>\n          </div>\n\n          {/* Filter button with grey background */}\n          <div className=\"p-4 bg-[#E6EDF4] sm:bg-[#034078]\">\n            <button\n              className=\"text-black sm:text-white w-full px-3 py-1 rounded-full text-sm flex items-center justify-between sm:justify-center sm:bg-[#022f5b] text-[15px] sm:text-[18px]\"\n              onClick={() => {\n                logButtonEvent(\"Filters button clicked!\", \"/discovery\");\n                setActiveFilter(!activeFilter);\n              }}\n            >\n              <p>Filters</p>\n              {!activeFilter ? (\n                <svg className=\"w-6 h-7 ml-2 fill-current\" viewBox=\"0 0 20 20\">\n                  <path d=\"M5.95 6.95l4 4 4-4 .707.708L10 12.364 5.242 7.657l.707-.707z\" />\n                </svg>\n              ) : (\n                <svg className=\"w-6 h-7 ml-2 fill-current\" viewBox=\"0 0 20 20\">\n                  <path d=\"M14.05 13.05l-4-4-4 4-.707-.708L10 7.636l4.758 4.707-.707.707z\" />\n                </svg>\n              )}\n            </button>\n          </div>\n        </div>\n\n        {activeFilter ? (\n          <div className=\"h-auto\">\n            <KidFilter\n              setAge={setAge}\n              setGender={setGender}\n              setHobbies={setHobbies}\n              hobbies={hobbies}\n              age={age}\n              gender={gender}\n              filter={filter}\n            />\n          </div>\n        ) : (\n          <div>\n            <div className=\"px-4 py-2 flex flex-row flex-wrap gap-5 justify-center relative\">\n              {kids.map((kid) => (\n                <KidCard\n                  kid={kid}\n                  calculateAge={calculateAge}\n                  key={kid?.id}\n                  style={{ minHeight: \"300px\", minWidth: \"280px\" }}\n                />\n              ))}\n            </div>\n            {lastKidDoc && (\n              <div className=\"flex justify-center\">\n                <button\n                  onClick={loadMoreKids}\n                  className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4\"\n                >\n                  {loading ? \"Loading...\" : \"Load More\"}\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"
        }
    ]
}