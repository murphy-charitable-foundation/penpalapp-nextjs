{
    "sourceFile": "app/edit-profile-user-image/page.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1744045163612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744067845297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n   const cropperRef = useRef();\n   const router = useRouter();\n   usePageAnalytics(\"/edit-profile-user-image\");\n   useEffect(() => {\n+    const startTime = performance.now();\n     const fetchUserData = async () => {\n       console.log(auth);\n       if (auth.currentUser) {\n         const uid = auth.currentUser.uid;\n@@ -37,8 +38,16 @@\n         }\n       }\n     };\n     fetchUserData();\n+    requestAnimationFrame(() => {\n+      setTimeout(() => {\n+        const endTime = performance.now();\n+        const loadTime = endTime - startTime;\n+        console.log(`Page render time: ${loadTime}ms`);\n+        logLoadingTime(\"/edit-profile-user-image\", loadTime);\n+      }, 0);\n+    });\n   }, [auth.currentUser]);\n \n   useEffect(() => {\n     const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n"
                }
            ],
            "date": 1744045163612,
            "name": "Commit-0",
            "content": "\"use client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { auth, db } from \"../firebaseConfig\";\nimport EditProfileImage from \"@/components/edit-profile-image\";\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { useRouter } from \"next/navigation\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { uploadFile } from \"../lib/uploadFile\";\nimport { logButtonEvent } from \"@/app/firebaseConfig\";\nimport { usePageAnalytics } from \"@/app/utils/useAnalytics\";\n\nexport default function EditProfileUserImage() {\n  const [image, setImage] = useState(\"\");\n  const [newProfileImage, setNewProfileImage] = useState(null);\n  const [previewURL, setPreviewURL] = useState(null);\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [storageUrl, setStorageUrl] = useState(null);\n  const [user, setUser] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  const cropperRef = useRef();\n  const router = useRouter();\n  usePageAnalytics(\"/edit-profile-user-image\");\n  useEffect(() => {\n    const fetchUserData = async () => {\n      console.log(auth);\n      if (auth.currentUser) {\n        const uid = auth.currentUser.uid;\n        const docRef = doc(db, \"users\", uid);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n          const userData = docSnap.data();\n          // setImage(userData.photo_uri || '/murphylogo.png');\n          setNewProfileImage(userData.photo_uri || \"/murphylogo.png\");\n          setPreviewURL(userData.photo_uri || \"/murphylogo.png\");\n        }\n      }\n    };\n    fetchUserData();\n  }, [auth.currentUser]);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      if (currentUser) {\n        setUser(currentUser);\n      } else {\n        // User is signed out\n        setUser(null);\n        router.push(\"/login\"); // Redirect to login page\n      }\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, [router]);\n\n  const onUploadComplete = (url) => {\n    console.log(\"Upload complete. File available at:\", url);\n    setStorageUrl(url);\n  };\n\n  const handleCrop = () => {\n    if (\n      cropperRef.current &&\n      typeof cropperRef.current?.cropper?.getCroppedCanvas === \"function\"\n    ) {\n      const canvas = cropperRef.current.cropper.getCroppedCanvas();\n      canvas.toBlob((blob) => {\n        setCroppedImage(blob);\n      });\n    }\n  };\n\n  const handleDrop = (acceptedFiles) => {\n    setImage(URL.createObjectURL(acceptedFiles[0]));\n  };\n\n  const saveImage = async () => {\n    const uid = auth.currentUser?.uid;\n\n    if (!uid) return; // Make sure uid is available\n\n    uploadFile(\n      croppedImage,\n      `profile/${uid}/profile-image`,\n      () => {},\n      (error) => console.error(\"Upload error:\", error),\n      async (url) => {\n        setStorageUrl(url);\n        console.log(\"Image Url:\" + url);\n        if (url) {\n          await updateDoc(doc(db, \"users\", uid), { photo_uri: url });\n          router.push(\"/profile\");\n        }\n      }\n    );\n    logButtonEvent(\"Save Profile Picture clicked!\", \"/edit-profile-user-image\");\n  };\n\n  return (\n    <div className=\"bg-gray-50 min-h-screen\">\n      <div className=\"max-w-lg mx-auto p-6\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            <button onClick={() => window.history.back()}>\n              <svg\n                className=\"h-6 w-6 text-gray-600\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M15 19l-7-7 7-7\"\n                />\n              </svg>\n            </button>\n\n            <h1 className=\"ml-4 text-xl font-bold text-gray-800\">Edit image</h1>\n          </div>\n        </div>\n        <div className=\"flex flex-col items-center\">\n          <EditProfileImage\n            image={image}\n            newProfileImage={newProfileImage}\n            previewURL={previewURL}\n            handleDrop={handleDrop}\n            handleCrop={handleCrop}\n            cropperRef={cropperRef}\n          />\n          <i>Click to edit</i>\n          <button\n            className=\"w-[80%] mx-auto mt-[100px] p-2 bg-[#4E802A] text-white font-semibold  rounded-[100px]\"\n            onClick={saveImage}\n          >\n            Save New Profile Picture\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
        }
    ]
}