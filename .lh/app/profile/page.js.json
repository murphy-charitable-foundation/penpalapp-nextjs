{
    "sourceFile": "app/profile/page.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1744045163609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744052722365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,14 @@\n   }, [auth.currentUser]);\n \n   // Save profile data to Firestore\n   const saveProfileData = async () => {\n+    e.preventDefault();\n+    setError(\"\");\n+\n+    // Adding unhandled error for testing\n+    throw new Error(\"This is an unhandled test error\");\n+\n     if (auth.currentUser) {\n       const uid = auth.currentUser.uid;\n       const userProfileRef = doc(db, \"users\", uid);\n \n"
                },
                {
                    "date": 1744053070988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,14 +67,8 @@\n   }, [auth.currentUser]);\n \n   // Save profile data to Firestore\n   const saveProfileData = async () => {\n-    e.preventDefault();\n-    setError(\"\");\n-\n-    // Adding unhandled error for testing\n-    throw new Error(\"This is an unhandled test error\");\n-\n     if (auth.currentUser) {\n       const uid = auth.currentUser.uid;\n       const userProfileRef = doc(db, \"users\", uid);\n \n"
                },
                {
                    "date": 1744058735332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n import { updateDoc } from \"firebase/firestore\";\n import HobbySelect from \"@/components/general/HobbySelect\";\n import { usePageAnalytics } from \"@/app/utils/useAnalytics\";\n-import { logButtonEvent } from \"@/app/firebaseConfig\";\n+import { logButtonEvent, logLoadingTime } from \"@/app/firebaseConfig\";\n import * as Sentry from \"@sentry/nextjs\";\n \n export default function EditProfile() {\n   // State initializations\n@@ -34,11 +34,17 @@\n   const [user, setUser] = useState(null);\n \n   const router = useRouter();\n   usePageAnalytics(\"/profile\");\n+\n   useEffect(() => {\n+    const startTime = performance.now();\n     const fetchUserData = async () => {\n       if (auth.currentUser) {\n+        const endTime = performance.now();\n+        const loadTime = endTime - startTime;\n+        console.log(`Page render time: ${loadTime}ms`);\n+        logLoadingTime(\"/profile\", loadTime);\n         const uid = auth.currentUser.uid;\n         const docRef = doc(db, \"users\", uid);\n         const docSnap = await getDoc(docRef);\n         console.log(docSnap.data());\n"
                },
                {
                    "date": 1744067293968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,12 +39,8 @@\n   useEffect(() => {\n     const startTime = performance.now();\n     const fetchUserData = async () => {\n       if (auth.currentUser) {\n-        const endTime = performance.now();\n-        const loadTime = endTime - startTime;\n-        console.log(`Page render time: ${loadTime}ms`);\n-        logLoadingTime(\"/profile\", loadTime);\n         const uid = auth.currentUser.uid;\n         const docRef = doc(db, \"users\", uid);\n         const docSnap = await getDoc(docRef);\n         console.log(docSnap.data());\n@@ -66,8 +62,17 @@\n           setFavoriteColor(userData.favorite_color || \"\");\n         } else {\n           console.log(\"No such document!\");\n         }\n+\n+        requestAnimationFrame(() => {\n+          setTimeout(() => {\n+            const endTime = performance.now();\n+            const loadTime = endTime - startTime;\n+            console.log(`Page render time: ${loadTime}ms`);\n+            logLoadingTime(\"/reset-password\", loadTime);\n+          }, 0);\n+        });\n       }\n     };\n     fetchUserData();\n   }, [auth.currentUser]);\n"
                },
                {
                    "date": 1744067414072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n           setTimeout(() => {\n             const endTime = performance.now();\n             const loadTime = endTime - startTime;\n             console.log(`Page render time: ${loadTime}ms`);\n-            logLoadingTime(\"/reset-password\", loadTime);\n+            logLoadingTime(\"/profile\", loadTime);\n           }, 0);\n         });\n       }\n     };\n"
                }
            ],
            "date": 1744045163609,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport { db, auth } from \"../firebaseConfig\";\n\nimport { updateDoc } from \"firebase/firestore\";\nimport HobbySelect from \"@/components/general/HobbySelect\";\nimport { usePageAnalytics } from \"@/app/utils/useAnalytics\";\nimport { logButtonEvent } from \"@/app/firebaseConfig\";\nimport * as Sentry from \"@sentry/nextjs\";\n\nexport default function EditProfile() {\n  // State initializations\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [birthday, setBirthday] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [village, setVillage] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [educationLevel, setEducationLevel] = useState(\"\");\n  const [isOrphan, setIsOrphan] = useState(false);\n  const [guardian, setGuardian] = useState(\"\");\n  const [dreamJob, setDreamJob] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [hobby, setHobby] = useState(\"\");\n  const [favoriteColor, setFavoriteColor] = useState(\"\");\n  const [photoUri, setPhotoUri] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  const router = useRouter();\n  usePageAnalytics(\"/profile\");\n  useEffect(() => {\n    const fetchUserData = async () => {\n      if (auth.currentUser) {\n        const uid = auth.currentUser.uid;\n        const docRef = doc(db, \"users\", uid);\n        const docSnap = await getDoc(docRef);\n        console.log(docSnap.data());\n\n        if (docSnap.exists()) {\n          const userData = docSnap.data();\n          setFirstName(userData.first_name || \"\");\n          setLastName(userData.last_name || \"\");\n          setEmail(userData.email || \"\");\n          setBirthday(userData.birthday || \"\");\n          setCountry(userData.country || \"\");\n          setVillage(userData.village || \"\");\n          setBio(userData.bio || \"\");\n          setEducationLevel(userData.education_level || \"\");\n          setIsOrphan(userData.is_orphan ? \"Yes\" : \"No\");\n          setGuardian(userData.gaurdian || \"\");\n          setDreamJob(userData.dream_job || \"\");\n          setHobby(userData.hobby || \"\");\n          setFavoriteColor(userData.favorite_color || \"\");\n        } else {\n          console.log(\"No such document!\");\n        }\n      }\n    };\n    fetchUserData();\n  }, [auth.currentUser]);\n\n  // Save profile data to Firestore\n  const saveProfileData = async () => {\n    if (auth.currentUser) {\n      const uid = auth.currentUser.uid;\n      const userProfileRef = doc(db, \"users\", uid);\n\n      const userProfile = {\n        first_name: firstName,\n        last_name: lastName,\n        email,\n        birthday,\n        country,\n        village,\n        bio,\n        education_level: educationLevel,\n        is_orphan: isOrphan.toLowerCase() === \"yes\" ? true : false,\n        gaurdian: guardian,\n        dream_job: dreamJob,\n        hobby,\n        favorite_color: favoriteColor,\n        gender,\n      };\n\n      try {\n        await updateDoc(userProfileRef, userProfile);\n        alert(\"Profile saved successfully!\");\n      } catch (error) {\n        alert(\"Error saving profile\");\n        Sentry.captureException(\"Error saving profile \" + error);\n      }\n\n      logButtonEvent(\"Save Profile clicked!\", \"/profile\");\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      if (currentUser) {\n        setUser(currentUser);\n      } else {\n        setUser(null);\n        router.push(\"/login\"); // Redirect to login page\n      }\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, [router]);\n\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      // User is signed out\n      router.push(\"/login\");\n    } catch (error) {\n      console.error(\"Error signing out: \", error);\n    }\n  };\n\n  return (\n    <div className=\"bg-gray-50 min-h-screen\">\n      <div className=\"max-w-lg mx-auto p-6\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            <button onClick={() => window.history.back()}>\n              <svg\n                className=\"h-6 w-6 text-gray-600\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M15 19l-7-7 7-7\"\n                />\n              </svg>\n            </button>\n\n            <h1 className=\"ml-4 text-xl font-bold text-gray-800\">\n              Edit profile\n            </h1>\n          </div>\n          <Link href=\"/letterhome\">\n            <button\n              onClick={saveProfileData}\n              className=\"bg-green-500 text-white py-2 px-4 rounded\"\n            >\n              Save\n            </button>\n          </Link>\n        </div>\n\n        {/* Profile Image */}\n        <div className=\"my-6\">\n          <div className=\"relative w-24 h-24 mx-auto\">\n            <Image\n              src={photoUri ? photoUri : \"/murphylogo.png\"}\n              layout=\"fill\"\n              className=\"rounded-full\"\n              alt=\"Profile picture\"\n            />\n            {/* Edit Icon */}\n            <div\n              className=\"absolute bottom-0 right-0 bg-blue-600 text-white p-2 rounded-full curspr-pointer\"\n              onClick={() => {\n                router.push(\"/edit-profile-user-image\");\n              }}\n            >\n              <svg\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M12 4v16m8-8H4\"\n                />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        {/* Form Fields */}\n        <div className=\"space-y-4 mb-[120px]\">\n          <div>\n            <label\n              htmlFor=\"firstName\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              First name\n            </label>\n            <input\n              type=\"text\"\n              id=\"firstName\"\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n              className=\"w-full p-3 border border-gray-300 rounded-md text-black\"\n            />\n          </div>\n          <div>\n            <label\n              htmlFor=\"lastName\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Last name\n            </label>\n            <input\n              type=\"text\"\n              id=\"lastName\"\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n              className=\"w-full p-3 border border-gray-300 rounded-md text-black\"\n            />\n          </div>\n\n          {/* Country Field */}\n          <div>\n            <label\n              htmlFor=\"country\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Country\n            </label>\n            <input\n              type=\"text\"\n              id=\"country\"\n              value={country}\n              onChange={(e) => setCountry(e.target.value)}\n              className=\"w-full p-3 border border-gray-300 rounded-md text-black\"\n              placeholder=\"Ex: Country\"\n            />\n          </div>\n\n          {/* Village Field */}\n          <div>\n            <label\n              htmlFor=\"village\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Village\n            </label>\n            <input\n              type=\"text\"\n              id=\"village\"\n              value={village}\n              onChange={(e) => setVillage(e.target.value)}\n              className=\"w-full p-3 border border-gray-300 rounded-md text-black\"\n              placeholder=\"Ex: Village\"\n            />\n          </div>\n\n          {/* Bio/Challenges faced Field */}\n          <div>\n            <label\n              htmlFor=\"bio\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Bio/Challenges faced\n            </label>\n            <textarea\n              id=\"bio\"\n              value={bio}\n              onChange={(e) => setBio(e.target.value)}\n              className=\"w-full p-3 border border-gray-300 rounded-md text-black\"\n              placeholder=\"Bio\"\n              maxLength=\"50\"\n            />\n          </div>\n\n          {/* Birthday Field */}\n          <div>\n            <label\n              htmlFor=\"birthday\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Birthday\n            </label>\n            <input\n              type=\"date\"\n              id=\"birthday\"\n              value={birthday}\n              onChange={(e) => setBirthday(e.target.value)}\n              className=\"w-full p-3 border border-gray-300 rounded-md text-black\"\n            />\n          </div>\n\n          {/* Education Level Dropdown */}\n          <div>\n            <label\n              htmlFor=\"educationLevel\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Education level\n            </label>\n            <select\n              id=\"educationLevel\"\n              value={educationLevel}\n              onChange={(e) => setEducationLevel(e.target.value)}\n              className=\"w-full p-3 border border-gray-300 rounded-md text-black\"\n            >\n              <option value=\"Elementary\">Elementary</option>\n              <option value=\"Middle\">Middle</option>\n              <option value=\"High School\">High School</option>\n              <option value=\"College/University\">College/University</option>\n              <option value=\"No Grade\">No Grade</option>\n            </select>\n          </div>\n\n          {/* Is Orphan Dropdown */}\n          <div>\n            <label\n              htmlFor=\"isOrphan\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Is orphan\n            </label>\n            <select\n              id=\"isOrphan\"\n              value={isOrphan}\n              onChange={(e) => setIsOrphan(e.target.value)}\n              className=\"w-full p-3 border border-gray-300 rounded-md text-black\"\n            >\n              <option value=\"No\">No</option>\n              <option value=\"Yes\">Yes</option>\n            </select>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"isOrphan\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Who the child lives with\n            </label>\n            <select\n              id=\"isOrphan\"\n              value={guardian}\n              onChange={(e) => setGuardian(e.target.value)}\n              className=\"w-full p-3 border border-gray-300 rounded-md text-black\"\n            >\n              <option value=\"Parents\">Parents</option>\n              <option value=\"AdoptiveParents\">AdoptiveParents</option>\n              <option value=\"Aunt/Uncle\">Aunt/Uncle</option>\n              <option value=\"Grandparents\">Grandparents</option>\n              <option value=\"Other Family\">Other Family</option>\n              <option value=\"Friends\">Friends</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"village\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Dream job\n            </label>\n            <input\n              type=\"text\"\n              id=\"dreamjob\"\n              value={dreamJob}\n              onChange={(e) => setDreamJob(e.target.value)}\n              className=\"w-full p-3 border border-gray-300 rounded-md text-black\"\n              placeholder=\"Ex: Astronaut\"\n            />\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"village\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Hobby\n            </label>\n            <input\n              type=\"text\"\n              id=\"hobby\"\n              value={hobby}\n              onChange={(e) => setHobby(e.target.value)}\n              className=\"w-full p-3 border border-gray-300 rounded-md text-black\"\n              placeholder=\"Ex: Football\"\n            />\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"village\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Favorite Color\n            </label>\n            <input\n              type=\"text\"\n              id=\"favcolor\"\n              value={favoriteColor}\n              onChange={(e) => setFavoriteColor(e.target.value)}\n              className=\"w-full p-3 border border-gray-300 rounded-md text-black\"\n              placeholder=\"Ex: Blue\"\n            />\n          </div>\n\n          <div>\n            <button\n              onClick={handleLogout}\n              className=\"bg-red-500 text-white py-2 px-4 rounded\"\n            >\n              Log out\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
        }
    ]
}